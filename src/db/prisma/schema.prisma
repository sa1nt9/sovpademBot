generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id             String   @id // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
    name           String
    city           String
    longitude      Float
    latitude       Float
    age            Int
    gender         Gender
    ownCoordinates Boolean  @default(false) // –ú–æ–∂–µ—Ç –±—ã—Ç—å null
    createdAt      DateTime @default(now()) // –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è
    referrerId     String? // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–≥–ª–∞—Å–∏–ª

    // –¢–∏–ø—ã –∞–Ω–∫–µ—Ç
    relationshipProfile RelationshipProfile?
    sportProfiles       SportProfile[]
    gameProfiles        GameProfile[]
    hobbyProfiles       HobbyProfile[]
    itProfiles          ItProfile[]

    reports    Report[] @relation("UserReports")
    reportedBy Report[] @relation("UserReported")

    rouletteUser RouletteUser?

    // –°–≤—è–∑–∏ –¥–ª—è —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
    blacklist Blacklist[] @relation("UserBlacklist")
    
    // –°–≤—è–∑–∏ –¥–ª—è –±–∞–Ω–æ–≤
    bans UserBan[] @relation("UserBanned")
}

// –û—Å–Ω–æ–≤–Ω–æ–π —Ç–∏–ø –∞–Ω–∫–µ—Ç—ã (–æ—Ç–Ω–æ—à–µ–Ω–∏—è)
model RelationshipProfile {
    id           String       @id @default(uuid())
    userId       String       @unique
    profileType  String       @default("RELATIONSHIP")
    interestedIn InterestedIn
    description  String?
    files        Json // –ú–∞—Å—Å–∏–≤ —Ñ–∞–π–ª–æ–≤ –≤ JSON
    isActive     Boolean      @default(true)
    createdAt    DateTime     @default(now())
    updatedAt    DateTime     @updatedAt

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// –°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –∞–Ω–∫–µ—Ç–∞
model SportProfile {
    id           String       @id @default(uuid())
    userId       String
    profileType  String       @default("SPORT")
    interestedIn InterestedIn
    subType      SportType
    level        String? // –£—Ä–æ–≤–µ–Ω—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏
    description  String?
    files        Json // –ú–∞—Å—Å–∏–≤ —Ñ–∞–π–ª–æ–≤ –≤ JSON 
    isActive     Boolean      @default(true)
    createdAt    DateTime     @default(now())
    updatedAt    DateTime     @updatedAt

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([userId, subType]) // –û–¥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –∏–º–µ—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø—Ä–æ—Ñ–∏–ª—å –∫–∞–∂–¥–æ–≥–æ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–≥–æ —Ç–∏–ø–∞
}

// –ò–≥—Ä–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞
model GameProfile {
    id           String       @id @default(uuid())
    userId       String
    profileType  String       @default("GAME")
    interestedIn InterestedIn
    subType      GameType
    accountLink  String? // –°—Å—ã–ª–∫–∞ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç
    description  String?
    files        Json // –ú–∞—Å—Å–∏–≤ —Ñ–∞–π–ª–æ–≤ –≤ JSON
    isActive     Boolean      @default(true)
    createdAt    DateTime     @default(now())
    updatedAt    DateTime     @updatedAt

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([userId, subType]) // –û–¥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –∏–º–µ—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø—Ä–æ—Ñ–∏–ª—å –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –∏–≥—Ä—ã
}

// –•–æ–±–±–∏ –∞–Ω–∫–µ—Ç–∞
model HobbyProfile {
    id           String       @id @default(uuid())
    userId       String
    profileType  String       @default("HOBBY")
    interestedIn InterestedIn
    subType      HobbyType
    description  String?
    files        Json // –ú–∞—Å—Å–∏–≤ —Ñ–∞–π–ª–æ–≤ –≤ JSON
    isActive     Boolean      @default(true)
    createdAt    DateTime     @default(now())
    updatedAt    DateTime     @updatedAt

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([userId, subType]) // –û–¥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –∏–º–µ—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø—Ä–æ—Ñ–∏–ª—å –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ —Ö–æ–±–±–∏
}

// IT –∞–Ω–∫–µ—Ç–∞
model ItProfile {
    id           String       @id @default(uuid())
    userId       String
    profileType  String       @default("IT")
    interestedIn InterestedIn
    subType      ITType
    experience   String // –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã
    technologies String? // –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏/—è–∑—ã–∫–∏
    github       String? // –°—Å—ã–ª–∫–∞ –Ω–∞ GitHub
    description  String?
    files        Json // –ú–∞—Å—Å–∏–≤ —Ñ–∞–π–ª–æ–≤ –≤ JSON
    isActive     Boolean      @default(true)
    createdAt    DateTime     @default(now())
    updatedAt    DateTime     @updatedAt

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([userId, subType]) // –û–¥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –∏–º–µ—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø—Ä–æ—Ñ–∏–ª—å –∫–∞–∂–¥–æ–≥–æ IT —Ç–∏–ø–∞
}

// –û–±—â–∞—è –º–æ–¥–µ–ª—å –ª–∞–π–∫–∞ –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –ø—Ä–æ—Ñ–∏–ª–µ–π
model ProfileLike {
    id              String      @id @default(uuid())
    fromProfileId   String
    toProfileId     String
    profileType     ProfileType
    liked           Boolean // true ‚Äî –ª–∞–π–∫, false ‚Äî –¥–∏–∑–ª–∞–π–∫
    message         String? // –¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫ –ª–∞–π–∫—É
    privateNote     String? // –õ–∏—á–Ω–∞—è –∑–∞–º–µ—Ç–∫–∞ –∫ –ª–∞–π–∫—É (–≤–∏–¥–Ω–∞ —Ç–æ–ª—å–∫–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é)
    videoFileId     String? // ID —Ñ–∞–π–ª–∞ –≤–∏–¥–µ–æ, –µ—Å–ª–∏ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
    voiceFileId     String?
    videoNoteFileId String?
    isMutual        Boolean     @default(false)
    isMutualAt      DateTime?
    createdAt       DateTime    @default(now())
}

model Session {
    id    Int    @id @default(autoincrement())
    key   String @unique
    value String
}

model Report {
    id         String     @id @default(uuid())
    reporterId String // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–∞–ª –∂–∞–ª–æ–±—É
    targetId   String // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ –ø–æ–¥–∞–Ω–∞ –∂–∞–ª–æ–±–∞
    type       ReportType // –¢–∏–ø –∂–∞–ª–æ–±—ã
    text       String? // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –∂–∞–ª–æ–±—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π)
    createdAt  DateTime   @default(now())

    reporter User @relation(name: "UserReports", fields: [reporterId], references: [id], onDelete: Cascade)
    target   User @relation(name: "UserReported", fields: [targetId], references: [id], onDelete: Cascade)
}

enum ReportType {
    other
    sale
    fake
    adult_content
    advertising
    scam
    dislike
}

enum Gender {
    male
    female
}

enum InterestedIn {
    male
    female
    all
}

enum ProfileType {
    RELATIONSHIP
    SPORT
    GAME
    HOBBY
    IT
}

enum SportType {
    GYM
    RUNNING
    SWIMMING
    FOOTBALL
    BASKETBALL
    TENNIS
    MARTIAL_ARTS
    YOGA
    CYCLING
    CLIMBING
    SKI_SNOWBOARD
}

enum GameType {
    CS_GO
    DOTA2
    VALORANT
    RUST
    MINECRAFT
    LEAGUE_OF_LEGENDS
    FORTNITE
    PUBG
    GTA
    APEX_LEGENDS
    FIFA
    CALL_OF_DUTY
    WOW
    GENSHIN_IMPACT
}

enum HobbyType {
    MUSIC
    DRAWING
    PHOTOGRAPHY
    COOKING
    CRAFTS
    DANCING
    READING
}

enum ITType {
    FRONTEND
    BACKEND
    FULLSTACK
    MOBILE
    DEVOPS
    QA
    DATA_SCIENCE
    GAME_DEV
    CYBERSECURITY
    UI_UX
}

model RouletteUser {
    id               String   @id
    chatPartnerId    String?
    searchingPartner Boolean  @default(true)
    createdAt        DateTime @default(now())
    profileRevealed  Boolean  @default(false)
    usernameRevealed Boolean  @default(false)

    user        User           @relation(fields: [id], references: [id], onDelete: Cascade)
    chatPartner RouletteUser?  @relation("ChatPartners", fields: [chatPartnerId], references: [id])
    partners    RouletteUser[] @relation("ChatPartners")

    // –°–≤—è–∑–∏ –¥–ª—è —Ä–µ–∞–∫—Ü–∏–π
    reactionsGiven    RouletteReaction[] @relation("ReactionGiver")
    reactionsReceived RouletteReaction[] @relation("ReactionReceiver")

    // –°–≤—è–∑–∏ –¥–ª—è —á–∞—Ç–æ–≤
    chatsAsUser1 RouletteChat[] @relation("UserChats1")
    chatsAsUser2 RouletteChat[] @relation("UserChats2")
}

model RouletteReaction {
    id         String       @id @default(uuid())
    fromUserId String // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø–æ—Å—Ç–∞–≤–∏–ª —Ä–µ–∞–∫—Ü–∏—é
    toUserId   String // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –ø–æ—Å—Ç–∞–≤–∏–ª–∏ —Ä–µ–∞–∫—Ü–∏—é
    type       ReactionType // –¢–∏–ø —Ä–µ–∞–∫—Ü–∏–∏
    createdAt  DateTime     @default(now())

    fromUser RouletteUser @relation("ReactionGiver", fields: [fromUserId], references: [id], onDelete: Cascade)
    toUser   RouletteUser @relation("ReactionReceiver", fields: [toUserId], references: [id], onDelete: Cascade)
}

enum ReactionType {
    LIKE // üëç
    DISLIKE // üëé
    CLOWN // ü§°
    FUNNY // üòÇ
    BORING // üò¥
    RUDE // üò°
}

model RouletteChat {
    id                 String    @id @default(uuid())
    user1Id            String // ID –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user2Id            String // ID –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    startedAt          DateTime  @default(now())
    endedAt            DateTime? // –í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —á–∞—Ç–∞ (null –µ—Å–ª–∏ —á–∞—Ç –∞–∫—Ç–∏–≤–µ–Ω)
    isProfileRevealed  Boolean   @default(false) // –ë—ã–ª–∏ –ª–∏ —Ä–∞—Å–∫—Ä—ã—Ç—ã –∞–Ω–∫–µ—Ç—ã
    isUsernameRevealed Boolean   @default(false) // –ë—ã–ª–∏ –ª–∏ —Ä–∞—Å–∫—Ä—ã—Ç—ã Telegram-–ø—Ä–æ—Ñ–∏–ª–∏

    user1 RouletteUser @relation("UserChats1", fields: [user1Id], references: [id], onDelete: Cascade)
    user2 RouletteUser @relation("UserChats2", fields: [user2Id], references: [id], onDelete: Cascade)
}

model Blacklist {
    id              String   @id @default(uuid())
    userId          String // –ö—Ç–æ –¥–æ–±–∞–≤–∏–ª –≤ –ß–°
    targetUserId    String // ID –ø—Ä–æ—Ñ–∏–ª—è, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–±–∞–≤–∏–ª–∏ –≤ –ß–°
    targetProfileId String
    profileType     ProfileType
    createdAt       DateTime @default(now())

    user User @relation("UserBlacklist", fields: [userId], references: [id], onDelete: Cascade)
}

// –ú–æ–¥–µ–ª—å –¥–ª—è –±–∞–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
model UserBan {
    id          String   @id @default(uuid())
    userId      String   // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –∑–∞–±–∞–Ω–∏–ª–∏
    reason      String?  // –ü—Ä–∏—á–∏–Ω–∞ –±–∞–Ω–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    bannedUntil DateTime // –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –±–∞–Ω–∞
    createdAt   DateTime @default(now())
    isActive    Boolean  @default(true) // –ê–∫—Ç–∏–≤–µ–Ω –ª–∏ –±–∞–Ω

    user User @relation("UserBanned", fields: [userId], references: [id], onDelete: Cascade)
}
