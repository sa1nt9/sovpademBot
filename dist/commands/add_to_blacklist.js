"use strict";var __awaiter=this&&this.__awaiter||function(e,s,o,t){return new(o||(o=Promise))((function(i,a){function n(e){try{r(t.next(e))}catch(e){a(e)}}function d(e){try{r(t.throw(e))}catch(e){a(e)}}function r(e){var s;e.done?i(e.value):(s=e.value,s instanceof o?s:new o((function(e){e(s)}))).then(n,d)}r((t=t.apply(e,s||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0}),exports.addToBlacklistCommand=void 0;const keyboards_1=require("../constants/keyboards"),postgres_1=require("../db/postgres"),addToBlacklist_1=require("../functions/addToBlacklist"),addToBlacklistCommand=e=>__awaiter(void 0,void 0,void 0,(function*(){var s;const o=String(null===(s=e.message)||void 0===s?void 0:s.from.id);e.logger.info({userId:o},"Starting add to blacklist command");(yield postgres_1.prisma.user.findUnique({where:{id:o}}))&&e.session.currentCandidateProfile&&("search_people"===e.session.step||"search_people_with_likes"===e.session.step||"options_to_user"===e.session.step)?(e.logger.info({userId:o,candidateProfileId:e.session.currentCandidateProfile.id,step:e.session.step},"Adding profile to blacklist"),yield(0,addToBlacklist_1.addToBlacklist)(e)):(e.session.step="cannot_send_complain",e.logger.warn({userId:o,step:e.session.step,hasCandidateProfile:!!e.session.currentCandidateProfile},"Cannot add to blacklist - wrong context"),yield e.reply(e.t("can_add_to_blacklist_only_while_searching"),{reply_markup:(0,keyboards_1.goBackKeyboard)(e.t,!0)}))}));exports.addToBlacklistCommand=addToBlacklistCommand;