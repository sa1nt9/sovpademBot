"use strict";var __awaiter=this&&this.__awaiter||function(e,n,o,s){return new(o||(o=Promise))((function(i,t){function r(e){try{p(s.next(e))}catch(e){t(e)}}function a(e){try{p(s.throw(e))}catch(e){t(e)}}function p(e){var n;e.done?i(e.value):(n=e.value,n instanceof o?n:new o((function(e){e(n)}))).then(r,a)}p((s=s.apply(e,n||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0}),exports.complainCommand=void 0;const keyboards_1=require("../constants/keyboards"),postgres_1=require("../db/postgres"),complainCommand=e=>__awaiter(void 0,void 0,void 0,(function*(){var n;const o=String(null===(n=e.message)||void 0===n?void 0:n.from.id);e.logger.info({userId:o,currentStep:e.session.step,hasCandidateProfile:!!e.session.currentCandidateProfile},"Starting complain command");(yield postgres_1.prisma.user.findUnique({where:{id:o}}))&&e.session.currentCandidateProfile&&("search_people"===e.session.step||"search_people_with_likes"===e.session.step||"options_to_user"===e.session.step)?(e.session.step="complain",e.logger.info({userId:o},"Showing complain options"),yield e.reply(e.t("complain_text"),{reply_markup:(0,keyboards_1.complainKeyboard)()})):(e.session.step="cannot_send_complain",e.logger.warn({userId:o},"Cannot send complain - wrong context"),yield e.reply(e.t("complain_can_be_sended_only_while_searching"),{reply_markup:(0,keyboards_1.goBackKeyboard)(e.t,!0)}))}));exports.complainCommand=complainCommand;