"use strict";var __awaiter=this&&this.__awaiter||function(e,i,r,t){return new(r||(r=Promise))((function(o,s){function n(e){try{c(t.next(e))}catch(e){s(e)}}function a(e){try{c(t.throw(e))}catch(e){s(e)}}function c(e){var i;e.done?o(e.value):(i=e.value,i instanceof r?i:new r((function(e){e(i)}))).then(n,a)}c((t=t.apply(e,i||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0}),exports.switchCommand=void 0;const keyboards_1=require("../constants/keyboards"),postgres_1=require("../db/postgres"),profilesService_1=require("../functions/db/profilesService"),switchCommand=e=>__awaiter(void 0,void 0,void 0,(function*(){var i;const r=String(null===(i=e.message)||void 0===i?void 0:i.from.id);e.logger.info({userId:r},"Starting switch command");if(yield postgres_1.prisma.user.findUnique({where:{id:r}})){e.logger.info({userId:r},"Getting user profiles for switching"),e.session.step="switch_profile";const i=yield(0,profilesService_1.getUserProfiles)(r,e);yield e.reply(e.t("switch_profile_message"),{reply_markup:(0,keyboards_1.switchProfileKeyboard)(e.t,i)})}else e.logger.info({userId:r},"No existing user, showing profile type selection"),e.session.step="create_profile_type",e.session.isCreatingProfile=!0,yield e.reply(e.t("profile_type_title"),{reply_markup:(0,keyboards_1.createProfileTypeKeyboard)(e.t)})}));exports.switchCommand=switchCommand;