"use strict";var __awaiter=this&&this.__awaiter||function(e,r,s,t){return new(s||(s=Promise))((function(a,n){function u(e){try{i(t.next(e))}catch(e){n(e)}}function o(e){try{i(t.throw(e))}catch(e){n(e)}}function i(e){var r;e.done?a(e.value):(r=e.value,r instanceof s?r:new s((function(e){e(r)}))).then(u,o)}i((t=t.apply(e,r||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0}),exports.revealUsernameAcceptCallbackQuery=void 0;const keyboards_1=require("../constants/keyboards"),postgres_1=require("../db/postgres"),i18n_1=require("../i18n"),revealUsernameAcceptCallbackQuery=e=>__awaiter(void 0,void 0,void 0,(function*(){var r,s,t,a;const n=e.callbackQuery,u=n.data,o=String(n.from.id),i=u.split(":")[1];e.logger.info({currentUserId:o,requestingUserId:i,callbackType:"reveal_username_accept",action:"username_reveal"},"User accepted username reveal request"),yield e.answerCallbackQuery({text:e.t("roulette_reveal_username_accepted"),show_alert:!1}),n.message&&(yield e.api.editMessageText(n.message.chat.id,n.message.message_id,e.t("roulette_reveal_username_accepted"),{reply_markup:{inline_keyboard:[]}}));const l=yield postgres_1.prisma.user.findUnique({where:{id:o},include:{rouletteUser:!0}}),d=yield postgres_1.prisma.user.findUnique({where:{id:i},include:{rouletteUser:!0}});if(l&&d){e.logger.info({currentUserId:o,requestingUserId:i,currentUserName:l.name,requestingUserName:d.name,currentUserUsername:null===(r=n.from)||void 0===r?void 0:r.username,requestingUserHasRouletteData:!!d.rouletteUser},"Both users found for username reveal"),l.rouletteUser&&(yield postgres_1.prisma.rouletteUser.update({where:{id:o},data:{usernameRevealed:!0}}),e.logger.debug({userId:o},"Updated username revealed status for current user")),d.rouletteUser&&(yield postgres_1.prisma.rouletteUser.update({where:{id:i},data:{usernameRevealed:!0}}),e.logger.debug({userId:i},"Updated username revealed status for requesting user"));const u=yield e.api.getChat(i);e.logger.debug({requestingUserId:i,username:u.username},"Retrieved requesting user info");const c=(null===(s=l.rouletteUser)||void 0===s?void 0:s.profileRevealed)||!1,m=!0;e.logger.info({currentUserId:o,requestingUserId:i,requestingUserUsername:u.username,currentUserUsername:null===(t=n.from)||void 0===t?void 0:t.username,profileRevealed:c},"Usernames revealed for both users"),yield e.reply(e.t("roulette_revealed_username")+`[${d.name}](https://t.me/${u.username})`,{parse_mode:"Markdown",reply_markup:(0,keyboards_1.rouletteKeyboard)(e.t,c,m),link_preview_options:{is_disabled:!0}});const p=yield postgres_1.prisma.session.findUnique({where:{key:i}}),{__language_code:g}=p?JSON.parse(p.value):{};e.logger.info({currentUserId:o,requestingUserId:i,language:g||"ru"},"Sending username reveal notification to requesting user"),yield e.api.sendMessage(i,(0,i18n_1.i18n)(!1).t(g||"ru","roulette_revealed_username_by_partner")+`[${l.name}](https://t.me/${null===(a=n.from)||void 0===a?void 0:a.username})`,{parse_mode:"Markdown",reply_markup:(0,keyboards_1.rouletteKeyboard)(e.t,c,m),link_preview_options:{is_disabled:!0}})}else e.logger.warn({currentUserId:o,requestingUserId:i,currentUserFound:!!l,requestingUserFound:!!d},"Could not find one or both users for username reveal")}));exports.revealUsernameAcceptCallbackQuery=revealUsernameAcceptCallbackQuery;