"use strict";var __awaiter=this&&this.__awaiter||function(e,r,t,s){return new(t||(t=Promise))((function(a,o){function i(e){try{n(s.next(e))}catch(e){o(e)}}function l(e){try{n(s.throw(e))}catch(e){o(e)}}function n(e){var r;e.done?a(e.value):(r=e.value,r instanceof t?r:new t((function(e){e(r)}))).then(i,l)}n((s=s.apply(e,r||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0}),exports.revealAcceptCallbackQuery=void 0;const keyboards_1=require("../constants/keyboards"),postgres_1=require("../db/postgres"),sendForm_1=require("../functions/sendForm"),i18n_1=require("../i18n"),revealAcceptCallbackQuery=e=>__awaiter(void 0,void 0,void 0,(function*(){var r;const t=e.callbackQuery,s=t.data,a=String(t.from.id),o=s.split(":")[1];e.logger.info({currentUserId:a,requestingUserId:o,callbackType:"reveal_accept",action:"profile_reveal"},"User accepted profile reveal request"),yield e.answerCallbackQuery({text:e.t("roulette_reveal_accepted"),show_alert:!1}),t.message&&(yield e.api.editMessageText(t.message.chat.id,t.message.message_id,e.t("roulette_reveal_accepted"),{reply_markup:{inline_keyboard:[]}}));const i=yield postgres_1.prisma.user.findUnique({where:{id:a},include:{rouletteUser:!0}}),l=yield postgres_1.prisma.user.findUnique({where:{id:o}});if(i&&l){e.logger.info({currentUserId:a,requestingUserId:o,currentUserName:i.name,requestingUserName:l.name},"Both users found for profile reveal"),i.rouletteUser&&(yield postgres_1.prisma.rouletteUser.update({where:{id:a},data:{profileRevealed:!0}}),e.logger.debug({userId:a,rouletteUserId:i.rouletteUser.id},"Updated profile revealed status for current user")),yield postgres_1.prisma.rouletteUser.update({where:{id:o},data:{profileRevealed:!0}}),e.logger.debug({userId:o},"Updated profile revealed status for requesting user");const t=!0,s=(null===(r=i.rouletteUser)||void 0===r?void 0:r.usernameRevealed)||!1;yield e.reply(e.t("roulette_revealed"),{reply_markup:(0,keyboards_1.rouletteKeyboard)(e.t,t,s)}),yield(0,sendForm_1.sendForm)(e,l,{myForm:!1});const n=yield postgres_1.prisma.session.findUnique({where:{key:o}}),{__language_code:d}=n?JSON.parse(n.value):{};e.logger.info({currentUserId:a,requestingUserId:o,profileRevealed:t,usernameRevealed:s,language:d||"ru"},"Sending mutual profile reveal notifications"),yield e.api.sendMessage(o,(0,i18n_1.i18n)(!1).t(d||"ru","roulette_your_profile_revealed")),yield e.api.sendMessage(o,(0,i18n_1.i18n)(!1).t(d||"ru","roulette_revealed"),{reply_markup:(0,keyboards_1.rouletteKeyboard)(e.t,t,s)}),yield(0,sendForm_1.sendForm)(e,i,{myForm:!1,sendTo:o})}else e.logger.warn({currentUserId:a,requestingUserId:o,currentUserFound:!!i,requestingUserFound:!!l},"Could not find one or both users for profile reveal")}));exports.revealAcceptCallbackQuery=revealAcceptCallbackQuery;