"use strict";var __awaiter=this&&this.__awaiter||function(e,r,t,o){return new(t||(t=Promise))((function(n,i){function s(e){try{a(o.next(e))}catch(e){i(e)}}function c(e){try{a(o.throw(e))}catch(e){i(e)}}function a(e){var r;e.done?n(e.value):(r=e.value,r instanceof t?r:new t((function(e){e(r)}))).then(s,c)}a((o=o.apply(e,r||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0}),exports.getReactionCounts=getReactionCounts;const postgres_1=require("../db/postgres"),logger_1=require("../logger");function getReactionCounts(e){return __awaiter(this,void 0,void 0,(function*(){if(!e)return logger_1.logger.warn("Empty userId provided for reaction counts"),{};try{logger_1.logger.info({userId:e},"Getting reaction counts");const r=yield postgres_1.prisma.rouletteReaction.findMany({where:{toUserId:e}}),t={};return r.forEach((e=>{const r=e.type;t[r]=(t[r]||0)+1})),logger_1.logger.info({userId:e,reactionTypes:Object.keys(t).length},"Retrieved reaction counts"),t}catch(r){return logger_1.logger.error({userId:e,error:r instanceof Error?r.message:"Unknown error",stack:r instanceof Error?r.stack:void 0},"Error getting reaction counts"),{}}}))}