"use strict";var __awaiter=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))((function(n,o){function s(e){try{a(i.next(e))}catch(e){o(e)}}function u(e){try{a(i.throw(e))}catch(e){o(e)}}function a(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(s,u)}a((i=i.apply(e,t||[])).next())}))},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.checkGithubUserExists=exports.getGithubUsername=void 0;const node_fetch_1=__importDefault(require("node-fetch")),githubLinkRegex_1=require("../constants/regex/githubLinkRegex"),logger_1=require("../logger"),getGithubUsername=e=>{const t=e.match(githubLinkRegex_1.githubShortLinkRegex),r=t?t[1]:null;return r?logger_1.logger.info({link:e,username:r},"Extracted GitHub username"):logger_1.logger.warn({link:e},"Failed to extract GitHub username"),r};exports.getGithubUsername=getGithubUsername;const checkGithubUserExists=e=>__awaiter(void 0,void 0,void 0,(function*(){try{const t=e.startsWith("http")||e.startsWith("www")?(0,exports.getGithubUsername)(e):e;if(!t)return logger_1.logger.warn({input:e},"No valid GitHub username found"),!1;logger_1.logger.info({username:t},"Checking GitHub user existence");const r=200===(yield(0,node_fetch_1.default)(`https://api.github.com/users/${t}`,{method:"GET",headers:{Accept:"application/vnd.github.v3+json","User-Agent":"SovpademBot"}})).status;return logger_1.logger.info({username:t,exists:r},"GitHub user check completed"),r}catch(t){return logger_1.logger.error({input:e,error:t instanceof Error?t.message:"Unknown error",stack:t instanceof Error?t.stack:void 0},"Error checking GitHub user"),!1}}));exports.checkGithubUserExists=checkGithubUserExists;