"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getGameUsernameToShow=exports.getGameProfileLink=exports.getGameUsername=exports.gameLocalizationKeys=void 0;const client_1=require("@prisma/client"),gamesRegex_1=require("../constants/regex/gamesRegex"),logger_1=require("../logger");exports.gameLocalizationKeys={[client_1.GameType.CS_GO]:"game_account_cs_go",[client_1.GameType.DOTA2]:"game_account_dota2",[client_1.GameType.VALORANT]:"game_account_valorant",[client_1.GameType.RUST]:"game_account_rust",[client_1.GameType.MINECRAFT]:"game_account_minecraft",[client_1.GameType.LEAGUE_OF_LEGENDS]:"game_account_league_of_legends",[client_1.GameType.FORTNITE]:"game_account_fortnite",[client_1.GameType.PUBG]:"game_account_pubg",[client_1.GameType.GTA]:"game_account_gta",[client_1.GameType.APEX_LEGENDS]:"game_account_apex_legends",[client_1.GameType.FIFA]:"game_account_fifa",[client_1.GameType.CALL_OF_DUTY]:"game_account_call_of_duty",[client_1.GameType.WOW]:"game_account_wow",[client_1.GameType.GENSHIN_IMPACT]:"game_account_genshin_impact"};const getGameUsername=(e,a)=>{try{switch(logger_1.logger.info({gameType:e,link:a},"Getting game username"),e){case client_1.GameType.CS_GO:const t=a.match(gamesRegex_1.steamProfileRegex);if(t)return logger_1.logger.info({gameType:e,platform:"steam"},"Found Steam username"),`${t[1]}:steam`;const r=a.match(gamesRegex_1.faceitProfileRegex);return r?(logger_1.logger.info({gameType:e,platform:"faceit"},"Found Faceit username"),`${r[1]}:faceit`):(logger_1.logger.warn({gameType:e,link:a},"No valid username found for CS:GO"),!1);case client_1.GameType.DOTA2:case client_1.GameType.RUST:const n=a.match(gamesRegex_1.steamProfileRegex);return!!n&&n[1];case client_1.GameType.VALORANT:const o=a.match(gamesRegex_1.riotProfileRegex);return!!o&&o[1];case client_1.GameType.MINECRAFT:const c=a.match(gamesRegex_1.minecraftProfileRegex);return!!c&&c[1];case client_1.GameType.LEAGUE_OF_LEGENDS:const m=a.match(gamesRegex_1.lolProfileRegex);return!!m&&m[1];case client_1.GameType.FORTNITE:const g=a.match(gamesRegex_1.fortniteProfileRegex);return!!g&&g[1];case client_1.GameType.PUBG:const s=a.match(gamesRegex_1.pubgProfileRegex);return!!s&&s[1];case client_1.GameType.GTA:const i=a.match(gamesRegex_1.rockstarProfileRegex);return!!i&&i[1];case client_1.GameType.APEX_LEGENDS:case client_1.GameType.FIFA:const l=a.match(gamesRegex_1.eaProfileRegex);return!!l&&l[1];case client_1.GameType.CALL_OF_DUTY:const _=a.match(gamesRegex_1.activisionProfileRegex);return!!_&&_[1];case client_1.GameType.WOW:const p=a.match(gamesRegex_1.battlenetProfileRegex);return!!p&&p[1];case client_1.GameType.GENSHIN_IMPACT:const T=a.match(gamesRegex_1.hoyoverseProfileRegex);return!!T&&T[1];default:return logger_1.logger.warn({gameType:e},"Unknown game type"),!1}}catch(t){return logger_1.logger.error({gameType:e,link:a,error:t instanceof Error?t.message:"Unknown error",stack:t instanceof Error?t.stack:void 0},"Error getting game username"),!1}};exports.getGameUsername=getGameUsername;const getGameProfileLink=(e,a)=>{switch(logger_1.logger.info({gameType:e,username:a},"Getting game profile link"),e){case client_1.GameType.CS_GO:{const[t,r]=a.split(":");return"faceit"===r?(logger_1.logger.info({gameType:e,platform:"faceit"},"Generated Faceit profile link"),[`https://www.faceit.com/players/${t}`,r]):(logger_1.logger.info({gameType:e,platform:"steam"},"Generated Steam profile link"),[`https://steamcommunity.com/profiles/${t}`,r])}case client_1.GameType.DOTA2:case client_1.GameType.RUST:return[`https://steamcommunity.com/profiles/${a}`];case client_1.GameType.VALORANT:return[`https://tracker.gg/valorant/profile/riot/${a}`];case client_1.GameType.MINECRAFT:return[`https://namemc.com/profile/${a}`];case client_1.GameType.LEAGUE_OF_LEGENDS:return[`https://www.op.gg/summoners/euw/${a}`];case client_1.GameType.FORTNITE:return[`https://fortnitetracker.com/profile/all/${a}`];case client_1.GameType.PUBG:return[`https://pubg.op.gg/user/${a}`];case client_1.GameType.GTA:return[`https://socialclub.rockstargames.com/member/${a}`];case client_1.GameType.APEX_LEGENDS:return[`https://apex.tracker.gg/apex-legends/profile/origin/${a}`];case client_1.GameType.FIFA:return[`https://www.ea.com/games/ea-sports-fc/profile/${a}`];case client_1.GameType.CALL_OF_DUTY:return[`https://www.callofduty.com/profile/${a}`];case client_1.GameType.WOW:return[`https://worldofwarcraft.com/en-us/character/${a}`];case client_1.GameType.GENSHIN_IMPACT:return[`https://hoyolab.com/accountCenter/userProfile/${a}`];default:return logger_1.logger.warn({gameType:e},"Unknown game type for profile link"),[]}};exports.getGameProfileLink=getGameProfileLink;const getGameUsernameToShow=(e,a)=>{if(logger_1.logger.info({gameType:e,username:a},"Getting game username to show"),e===client_1.GameType.CS_GO){const t=a.split(":")[0];return logger_1.logger.info({gameType:e,displayName:t},"Extracted CS:GO display name"),t}return logger_1.logger.info({gameType:e,username:a},"Using original username"),a};exports.getGameUsernameToShow=getGameUsernameToShow;