"use strict";var __awaiter=this&&this.__awaiter||function(e,t,r,s){return new(r||(r=Promise))((function(i,n){function o(e){try{d(s.next(e))}catch(e){n(e)}}function a(e){try{d(s.throw(e))}catch(e){n(e)}}function d(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(o,a)}d((s=s.apply(e,t||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0}),exports.sendMutualSympathyAfterAnswer=void 0;const keyboards_1=require("../constants/keyboards"),postgres_1=require("../db/postgres"),sendForm_1=require("./sendForm"),defaultOptions={withoutSleepMenu:!1},sendMutualSympathyAfterAnswer=(e,...t)=>__awaiter(void 0,[e,...t],void 0,(function*(e,t=defaultOptions){var r;const s=String(null===(r=e.from)||void 0===r?void 0:r.id),i=String(e.session.pendingMutualLikeProfileId);e.logger.info({userId:s,targetUserId:i,withoutSleepMenu:t.withoutSleepMenu},"Sending mutual sympathy after answer");const n=yield postgres_1.prisma.user.findUnique({where:{id:i}});if(n){const r=yield postgres_1.prisma.profileLike.findFirst({where:{fromProfileId:s,toProfileId:n.id,liked:!0},orderBy:{createdAt:"desc"},select:{privateNote:!0}});yield(0,sendForm_1.sendForm)(e,n,{myForm:!1,privateNote:null==r?void 0:r.privateNote}),e.session.step="continue_see_forms";const o=yield e.api.getChat(n.id);yield e.reply(`${e.t("mutual_sympathy")} [${n.name}](https://t.me/${o.username})`,{reply_markup:(0,keyboards_1.complainToUserKeyboard)(e.t,String(n.id)),link_preview_options:{is_disabled:!0},parse_mode:"Markdown"}),t.withoutSleepMenu||(e.session.step="sleep_menu",yield e.reply(e.t("sleep_menu"),{reply_markup:(0,keyboards_1.profileKeyboard)()})),e.session.pendingMutualLike=!1,e.session.pendingMutualLikeProfileId=void 0,e.logger.info({userId:s,targetUserId:i},"Mutual sympathy sent successfully")}else e.logger.warn({userId:s,targetUserId:i},"Liked user not found")}));exports.sendMutualSympathyAfterAnswer=sendMutualSympathyAfterAnswer;